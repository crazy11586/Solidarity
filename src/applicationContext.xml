<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">


	<bean id="SpringApplicationContext" class="com.jsu.action.ApplicationContextHelper">
	
	</bean>  
	
	<!-- 定义Action -->
	<bean id="loginAction" class="com.jsu.action.LoginAction" scope="prototype"> 
	</bean>

	<!-- 配置数据源 -->
<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		  <!--
		<property name="url" value="jdbc:mysql://10.0.0.172:3306/scanner?connectTimeout=60000" />
		<property name="username" value="root"></property>
		<property name="password" value="199729"></property> 
           -->
        <property name="url" value="jdbc:mysql://123.206.201.99:3306/conveniently?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root"></property>
		<property name="password" value="123456"></property> 
    
         <!--
         <property name="url" value="jdbc:mysql://localhost:3306/scanner" />
		<property name="username" value="root"></property>
		<property name="password" value="763893636"></property> -->
    <!-- 配置初始化大小、最小、最大 -->  
    <property name="initialSize" value="1" />  
    <property name="minIdle" value="1" />   
    <property name="maxActive" value="100" />  
   
   <property name="removeAbandoned" value="true" />

<property name="removeAbandonedTimeout" value="1800" />
   
    <!-- 配置获取连接等待超时的时间 -->  
    <property name="maxWait" value="60000" />  
   
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
   
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
    <property name="minEvictableIdleTimeMillis" value="300000" />  
    
    <property name="validationQuery" value="SELECT 'x'" />  
    <property name="testWhileIdle" value="true" />  
    <property name="testOnBorrow" value="false" />  
    <property name="testOnReturn" value="false" />  
   
    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
    <property name="poolPreparedStatements" value="true" />  
    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />  
   
    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
    <property name="filters" value="stat" />  
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<property name="mappingLocations" value="classpath:*.hbm.xml"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<tx:advice id="smAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="smMethod" expression="execution(* test.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="smMethod" advice-ref="smAdvice" />
	</aop:config>

	
	<!-- Service************************************************* -->
	<bean name="userService" class="com.jsu.Iservice.UserService">
		<property name="IUserDaoImpl" ref="userDao"></property>
	</bean>
	
	<bean name="friendService" class="com.jsu.Iservice.FriendService">
		<property name="IFriendDaoImpl" ref="friendDao"></property>
	</bean>
	<bean name="userConditionService" class="com.jsu.Iservice.UserConditionService">
		<property name="userConditionDao" ref="userConditionDao"></property>
	</bean>
	
	<bean name="addressService" class="com.jsu.Iservice.AddressService">
		<property name="IAddressDaoImpl" ref="addressDao"></property>
	</bean>
	<!-- Dao******************************************************** -->
	<bean name="userDao" class="com.jsu.dao.IUserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean name="friendDao" class="com.jsu.dao.IFriendDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="userConditionDao" class="com.jsu.dao.UserConditionDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean name="addressDao" class="com.jsu.dao.IAddressDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
</beans> 